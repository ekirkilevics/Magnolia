<?xml version="1.0"?>
<document>
    <properties>
        <title>Installing Magnolia</title>
        <author email="fgiust(at)users.sourceforge.net">Fabrizio Giustina</author>
    </properties>
    <body>
        <section name="Installing Magnolia">
            <strong>
                Warning: this steps only apply to the Magnolia 2.1 distribution. Refer to the appropriate documentation
                for previous versions.
            </strong>
            <subsection name="Getting an application servers">
                <p>
                    Magnolia requires a servlet 2.4 compatible servlet container and a 1.4 level jre/jdk (depending on
                    the server requisites) in oder to run properly. The suggested server is Apache Tomcat 5.x.
                </p>
                <p>
                    In order to install Magnolia 2.1 you will need to setup a working application server instance,
                    Tomcat is NOT bundled in the distribution.
                </p>
            </subsection>
            <subsection name="Deploying Magnolia">
                <p>
                    After downloading the latest Magnolia war or compiling it from subversion all you need to do is
                    dropping it to the server
                    <code>webapps</code>
                    directory. At the first run Magnolia will automatically generate a default repository and import
                    content from a set of xml file. This process is known as "bootstrapping".
                </p>
                <p>
                    <strong>
                        Warning: since bootstrapping could require a large amount of memory, be sure to set the maximum
                        memory available to the server to at least 256MB (usually passing the -Xmx256m parameter to the
                        java process). If an OutOfMemory error pops up in the console during the bootstrap process you
                        will need to remove the magnolia webapp and redeploy it since bootstrap will not be repeated if
                        a partial repository has already been loaded.
                    </strong>
                </p>
                <p>
                    Also note that Magnolia requires to be unzipped in order to work properly. Most of the application
                    server automatically unzip wars while deploying them: if you run Magnolia on an application server
                    which is able to run zipped wars you will need to unpack it manually.
                </p>
            </subsection>
            <subsection name="Testing the installation">
                <p>
                    Open your favorite browser and go to http://[server name]:[port]/[war name]. That means, for a
                    default installation, http://localhost:8080/magnolia. You should see a login prompt, use
                    <code>superuser</code>
                    as login/password and welcome to the magnolia admin interface.
                </p>
                <p>
                    If you can't see anything probably the bootstrap process failed. Check you server logs for errors,
                    the most common reason for a failure is an OutOfMemory error during bootstrap.
                </p>
            </subsection>
            <subsection name="Multiple installation and advanced configuration">
                <p>
                    Multiple instances of Magnolia 2.1 can now work on the same server (previous versions required to be
                    bound to the root context).
                </p>
                <p>
                    The core Magnolia configuration is done in web.xml. By default, all the repositories, logs and
                    working folders are created inside the webapp, so the standard configuration is mostly ok for
                    running multiple wars under the same server.
                </p>
                <p>
                    <strong>
                        There is a single configuration you will usually need to change when deploying multiple Magnolia
                        wars on the same server, which is needed in order configure logging properly.
                    </strong>
                    In order to setup absolute paths for log4j Magnolia need to pass the webapp root to a system
                    property which is then used in the log4j.xml config file. Some application server (e.g. Tomcat)
                    share system variables between different webapp, so you will need to change the variable name to a
                    unique name.
                </p>
                <p>
                    The system variable name is defined by the
                    <code>magnolia.root.sysproperty</code>
                    parameter in web.xml and it's usually set to
                    <code>magnolia.root</code>
                    . In order to run a second instance under the same server you will need to change it to e.g.
                    <code>magnolia2.root</code>
                    both in web.xml and config/log4j.xml.
                </p>
                <p>
                    Note that the magnolia root system property is only needed to configure logging, so you can freely
                    remove it if you are using a different log4j configuration (for example a shared configuration for
                    all the server or a JMS based appender).
                </p>
            </subsection>
        </section>
    </body>
</document>
