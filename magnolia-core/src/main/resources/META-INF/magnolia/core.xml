<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module SYSTEM "module.dtd">
<module>
  <name>core</name>
  <displayName>Magnolia Core Module</displayName>
  <class>info.magnolia.setup.CoreModule</class>
  <versionHandler>info.magnolia.setup.CoreModuleVersionHandler</versionHandler>
  <version>${project.version}</version>

  <components>
    <id>system</id>
    <component>
      <type>info.magnolia.content2bean.Content2BeanProcessor</type>
      <implementation>info.magnolia.content2bean.impl.Content2BeanProcessorImpl</implementation>
    </component>
    <component>
      <type>info.magnolia.content2bean.Content2BeanTransformer</type>
      <implementation>info.magnolia.content2bean.impl.Content2BeanTransformerImpl</implementation>
    </component>
    <component>
      <type>info.magnolia.content2bean.TransformationState</type>
      <implementation>info.magnolia.content2bean.impl.TransformationStateImpl</implementation>
    </component>
    <component>
      <type>info.magnolia.content2bean.TypeMapping</type>
      <implementation>info.magnolia.content2bean.impl.TypeMappingImpl</implementation>
    </component>
    <component>
      <type>info.magnolia.cms.i18n.MessagesManager</type>
      <implementation>info.magnolia.cms.i18n.DefaultMessagesManager</implementation>
    </component>
    <component>
      <type>info.magnolia.cms.license.LicenseFileExtractor</type>
      <implementation>info.magnolia.cms.license.LicenseFileExtractor</implementation>
    </component>
    <component>
      <type>info.magnolia.cms.beans.config.VersionConfig</type>
      <implementation>info.magnolia.cms.beans.config.VersionConfig</implementation>
    </component>
    <component>
      <type>info.magnolia.context.SystemContext</type>
      <implementation>info.magnolia.context.JCRSessionPerThreadSystemContext</implementation>
    </component>
    <component>
      <type>info.magnolia.cms.util.WorkspaceAccessUtil</type>
      <implementation>info.magnolia.cms.util.WorkspaceAccessUtil</implementation>
    </component>
    <component>
      <type>info.magnolia.cms.beans.config.ConfigLoader</type>
      <implementation>info.magnolia.cms.beans.config.ConfigLoader</implementation>
    </component>
    <component>
      <type>info.magnolia.cms.util.UnicodeNormalizer$Normalizer</type>
      <implementation>info.magnolia.cms.util.UnicodeNormalizer$AutoDetectNormalizer</implementation>
    </component>
    <component>
      <type>info.magnolia.cms.filters.FilterManager</type>
      <implementation>info.magnolia.cms.filters.FilterManagerImpl</implementation>
    </component>
  </components>

  <components>
    <id>main</id>
    <configurer>
      <class>info.magnolia.objectfactory.guice.ModuleInstancesConfigurer</class>
    </configurer>
    <configurer>
      <class>info.magnolia.objectfactory.configuration.LegacyComponentsConfigurer</class>
    </configurer>
    <component>
      <type>info.magnolia.context.WebContextFactory</type>
      <implementation>info.magnolia.context.WebContextFactoryImpl</implementation>
    </component>
    <component>
      <type>info.magnolia.cms.beans.config.ServerConfiguration</type>
      <provider>info.magnolia.cms.beans.config.ServerConfiguration$InstanceFactory</provider>
      <scope>singleton</scope>
    </component>
    <component>
      <type>info.magnolia.cms.security.SecuritySupport</type>
      <workspace>config</workspace>
      <path>/server/security</path>
      <observed>true</observed>
      <scope>singleton</scope>
    </component>
    <component>
      <type>info.magnolia.cms.security.IPSecurityManager</type>
      <provider>info.magnolia.cms.security.IPSecurityManagerImpl$InstanceFactory</provider>
      <scope>singleton</scope>
    </component>
    <component>
      <type>info.magnolia.cms.filters.WebContainerResources</type>
      <workspace>config</workspace>
      <path>/server/webContainerResources</path>
      <observed>true</observed>
      <scope>singleton</scope>
    </component>
    <component>
      <type>info.magnolia.cms.beans.config.VirtualURIManager</type>
      <implementation>info.magnolia.cms.beans.config.VirtualURIManager</implementation>
    </component>
    <component>
      <type>info.magnolia.cms.beans.config.URI2RepositoryManager</type>
      <workspace>config</workspace>
      <path>/server/URI2RepositoryMapping</path>
      <observed>true</observed>
      <scope>singleton</scope>
    </component>
    <component>
      <type>info.magnolia.cms.core.version.VersionManager</type>
      <implementation>info.magnolia.cms.core.version.VersionManager</implementation>
    </component>
    <component>
      <type>info.magnolia.commands.CommandsManager</type>
      <implementation>info.magnolia.commands.CommandsManager</implementation>
    </component>
    <component>
      <type>info.magnolia.cms.beans.config.ShutdownManager</type>
      <implementation>info.magnolia.cms.beans.config.ShutdownManager</implementation>
    </component>
    <component>
      <type>info.magnolia.cms.i18n.I18nContentSupport</type>
      <workspace>config</workspace>
      <path>/server/i18n/content</path>
      <observed>true</observed>
      <scope>singleton</scope>
    </component>
    <component>
      <type>info.magnolia.link.LinkTransformerManager</type>
      <workspace>config</workspace>
      <path>/server/rendering/linkManagement</path>
      <observed>true</observed>
      <scope>singleton</scope>
    </component>
    <component>
      <type>info.magnolia.cms.exchange.ActivationManager</type>
      <workspace>config</workspace>
      <path>/server/activation</path>
      <observed>true</observed>
      <scope>singleton</scope>
    </component>
    <component>
      <type>info.magnolia.freemarker.FreemarkerHelper</type>
      <implementation>info.magnolia.freemarker.FreemarkerHelper</implementation>
    </component>
    <component>
      <type>info.magnolia.freemarker.FreemarkerConfig</type>
      <workspace>config</workspace>
      <path>/server/rendering/freemarker</path>
      <observed>true</observed>
      <scope>singleton</scope>
    </component>
    <component>
      <type>info.magnolia.logging.AuditLoggingManager</type>
      <workspace>config</workspace>
      <path>/server/auditLogging</path>
      <observed>true</observed>
      <scope>singleton</scope>
    </component>
    <component>
      <type>info.magnolia.cms.core.search.SearchFactory</type>
      <implementation>info.magnolia.cms.core.search.DefaultSearchFactory</implementation>
    </component>
    <type-mapping>
      <type>info.magnolia.voting.Voting</type>
      <implementation>info.magnolia.voting.DefaultVoting</implementation>
    </type-mapping>
    <type-mapping>
      <type>info.magnolia.voting.Voter</type>
      <implementation>info.magnolia.voting.voters.VoterSet</implementation>
    </type-mapping>
    <type-mapping>
      <type>info.magnolia.commands.CommandTransformer</type>
      <implementation>info.magnolia.commands.CommandTransformer</implementation>
    </type-mapping>
    <type-mapping>
      <type>info.magnolia.cms.filters.MgnlFilter</type>
      <implementation>info.magnolia.cms.filters.CompositeFilter</implementation>
    </type-mapping>
  </components>

  <servlets>
    <servlet>
      <name>ClasspathSpoolServlet</name>
      <class>info.magnolia.cms.servlets.ClasspathSpool</class>
      <comment>Used to spool resources from the classpath.</comment>
      <mappings>
        <mapping>/.resources/*</mapping>
      </mappings>
    </servlet>
    <servlet>
      <name>log4j</name>
      <class>it.openutils.log4j.Log4jConfigurationServlet</class>
      <mappings>
        <mapping>/.magnolia/log4j</mapping>
      </mappings>
    </servlet>
  </servlets>
</module>
