<?xml version="1.0"?>
<!-- ====================================================================== 
	Helps creating a release. You must copy a tomcat zip into the release
	directory. The script must be started in the root directory.
	
	Attention: this script is only for making the release it is not meant
	to be used for common build processes.
     ====================================================================== -->
<project name="project" default="release">
	<property name="release.name" value="2.1rc2" />
	<property name="release.tomcat.name" value="jakarta-tomcat-5.0.28"/>
	<property name="release.dest" value="release/${release.name}"/>
	<property name="release.src" value="release"/>
	<property name="maven.home" value="/Applications/maven-1.0.2"/>
	
    <!-- ================================= 
          target: release              
         ================================= -->
    <target name="release" depends="clear,build,tomcat,pack" description="--> description">
    </target>
	
	<target name="clear">
		<delete dir="${release.dest}" failonerror="no"/>
	</target>
	
	<target name="tomcat" depends="build">
		<gunzip src="${release.src}/${release.tomcat.name}.tar.gz" />
		<untar src="${release.src}/${release.tomcat.name}.tar" dest="${release.dest}"/>
		<delete file="${release.src}/${release.tomcat.name}.tar" />
		<move file="${release.dest}/${release.tomcat.name}" tofile="${release.dest}/bundled/tomcat" />
		
		<delete dir="${release.dest}/tomcat/webapps/tomcat-docs" />
		
		<copy file="${release.src}/release notes.bundled.txt" tofile="${release.dest}/bundled/release notes.txt" overwrite="true"/>
		<copy file="${release.src}/license.bundled.txt" tofile="${release.dest}/bundled/license.txt" overwrite="true"/>

		<copy file="${release.src}/server.xml" todir="${release.dest}/bundled/tomcat/conf" overwrite="true"/>
		<copy file="${release.src}/server-original.xml" todir="${release.dest}/bundled/tomcat/conf" overwrite="true"/>
		<copy file="${release.src}/catalina.sh" todir="${release.dest}/bundled/tomcat/bin" overwrite="true"/>
		<copy file="${release.src}/catalina.bat" todir="${release.dest}/bundled/tomcat/bin" overwrite="true"/>
		<copy file="${release.src}/startup.sh" todir="${release.dest}/bundled/tomcat/bin" overwrite="true"/>
		<copy file="${release.src}/startup.bat" todir="${release.dest}/bundled/tomcat/bin" overwrite="true"/>
		
		<copy todir="${release.dest}/bundled/tomcat/webapps">
			<fileset dir="${release.dest}/wars" >
			    <include name="*.war"/>
			</fileset>
		</copy>
	</target>
	
	<target name="build" depends="clear">
		<delete dir="target"/>	
		<exec executable="${maven.home}/bin/maven" >
			<arg value="-Dmagnolia.build.instance=author"/>
			<arg value="war"/>
		</exec>
		
		<copy file="target/magnolia.war" tofile="${release.dest}/wars/magnoliaAuthor.war"/>

		<delete dir="target"/>	
		<exec executable="${maven.home}/bin/maven" >
			<arg value="-Dmagnolia.build.instance=public"/>
			<arg value="war"/>
		</exec>
		
		<copy file="target/magnolia.war" tofile="${release.dest}/wars/magnoliaPublic.war"/>

	</target>
	
    <!-- ================================= 
          target: pack              
         ================================= -->
    <target name="pack" depends="build, tomcat" description="--> description">
		<copy file="${release.src}/license.bundled.txt" tofile="${release.dest}/wars/license.txt" overwrite="true"/>
    		<zip destfile="${release.dest}/magnolia${release.name}_war_files.zip" basedir="${release.dest}/wars"/>
     	<zip destfile="${release.dest}/magnolia${release.name}_with_tomcat.zip" basedir="${release.dest}/bundled"/>
    </target>
	
</project>
