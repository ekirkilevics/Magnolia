<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE taglib
        PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
    "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<taglib>
  <tlib-version>3.5</tlib-version>
  <jsp-version>1.2</jsp-version>
  <short-name>cms</short-name>
  <uri>cms-taglib</uri>
  <display-name>CMS tag library</display-name>
  <description>Core tag library for CMS</description>
  <tag>
    <name>mainBar</name>
    <tag-class>info.magnolia.cms.taglibs.MainBar</tag-class>
    <body-content>JSP</body-content>
    <description>
      Displays the mainBar, i.e. the bar that allows you to change the page properties and switch to preview mode. This
      tag also add the CSS and JS links if not previously defined, but it's recommended to add the cms:links tag to the
      header of the page. CSS links are not valid inside the HTML body tag.
    </description>
    <attribute>
      <name>paragraph</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>@deprecated use the dialog attribute instead</description>
    </attribute>
    <attribute>
      <name>dialog</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the dialog for the page properties (as defined in config)</description>
    </attribute>
    <attribute>
      <name>label</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Label for the page properties button</description>
    </attribute>
    <attribute>
      <name>adminButtonVisible</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>Set this to false if you don't want to show the AdminCentral button</description>
    </attribute>
  </tag>
  <tag>
    <name>links</name>
    <tag-class>info.magnolia.cms.taglibs.LinksTag</tag-class>
    <body-content>empty</body-content>
    <description>
      Adds the needed css and js links for magnolia edit controls. This tag should always bee added to html head.
    </description>
    <attribute>
      <name>adminOnly</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>
        Show links only in admin instance, defaults to true. You can set it to false if you want magnolia css and js
        files added also for a public instance.
      </description>
    </attribute>
  </tag>
  <tag>
    <name>editBar</name>
    <tag-class>info.magnolia.cms.taglibs.EditBar</tag-class>
    <body-content>JSP</body-content>
    <description>
      Displays Magnolia editBar which allows you to edit a paragraph. This tag is often used within
      contentNodeIterator, which in turn will set all relevant parameters automatically.
    </description>
    <attribute>
      <name>contentNodeName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The contentNode (i.e. paragraph) you wish to edit.</description>
    </attribute>
    <attribute>
      <name>contentNodeCollectionName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The contentNode collection.</description>
    </attribute>
    <attribute>
      <name>paragraph</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Name of paragraph (as defined in config). Does not have to be set inside "contentNodeIterator".
      </description>
    </attribute>
    <attribute>
      <name>editLabel</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The text of the edit button, defaults to "Edit".</description>
    </attribute>
    <attribute>
      <name>deleteLabel</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The text of the delete button, defaults to "Delete". Use "" to get no delete button.</description>
    </attribute>
    <attribute>
      <name>moveLabel</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The text of the move button, defaults to "Move". Use "" to get no move button.</description>
    </attribute>
    <attribute>
      <name>adminOnly</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>Show only in admin instance, default to true.</description>
    </attribute>
  </tag>
  <!-- new bar tag -->
  <tag>
    <name>newBar</name>
    <tag-class>info.magnolia.cms.taglibs.NewBar</tag-class>
    <body-content>JSP</body-content>
    <description>Displays a newBar that allows you to create new paragraphs.</description>
    <attribute>
      <name>contentNodeCollectionName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>New paragraphs will be stored under this node's name. You will need the name for later retrieval of contents.</description>
    </attribute>
    <attribute>
      <name>paragraph</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Comma separated list of allowed paragraph types.</description>
    </attribute>
    <attribute>
      <name>newLabel</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Text of the button, defaults to "New".</description>
    </attribute>
    <attribute>
      <name>adminOnly</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>Show only in admin instance, default to true.</description>
    </attribute>
    <example>
      <![CDATA[
<cms:newBar
contentNodeCollectionName="mainColumnParagraphs"
paragraph="samplesTextImage,samplesDownload,samplesLink"/>
]]>
    </example>
  </tag>
  <tag>
    <name>editButton</name>
    <tag-class>info.magnolia.cms.taglibs.EditButton</tag-class>
    <body-content>empty</body-content>
    <description>Displays an edit button.</description>
    <attribute>
      <name>contentNodeName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>contentNodeCollectionName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>paragraph</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The paragraph type.</description>
    </attribute>
    <attribute>
      <name>parFile</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>@deprecated use the paragraph attribute</description>
    </attribute>
    <attribute>
      <name>template</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>label</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The button's label. (defaults to "Edit")</description>
    </attribute>
    <attribute>
      <name>editLabel</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>@deprecated use the label attribute instead.</description>
    </attribute>
    <attribute>
      <name>small</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>Sets the size of the button. (defaults to true) </description>
    </attribute>
    <attribute>
      <name>adminOnly</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>Show only in admin instance, defaults to true.</description>
    </attribute>
  </tag>
  <tag>
    <name>out</name>
    <tag-class>info.magnolia.cms.taglibs.Out</tag-class>
    <body-content>empty</body-content>
    <description>
      Writes out the content of a nodeData or - for nodeData of type binary - information of the nodeData.
    </description>
    <attribute>
      <name>nodeDataName</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The name of the nodeData you wish to write out (required). There are following special values supported
        name, uuid, path, handle. If you specify one of special values, the behavior changes to output the name, uuid,
        path, or handle of the node instead of the value it stores.
      </description>
    </attribute>
    <attribute>
      <name>defaultValue</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Default value used if the expresion evaluates to null or an empty string.
      </description>
    </attribute>
    <attribute>
      <name>contentNodeName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Inside a "contentNodeIterator": if not set, the current content node is taken. If set empty
        (contentNodeName=""), the top level content is taken. If specified, the named content node is taken. Outside
        a "contentNodeIterator": if not set or empty: the top level content is taken. If specified, the named content
        node is taken.
      </description>
    </attribute>
    <attribute>
      <name>contentNodeCollectionName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the collection holding the content node, e.g. "mainColumnParagraphs".</description>
    </attribute>
    <attribute>
      <name>fileProperty</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[Sets which information of a file to retrieve. Only applies for nodeDatas of type=Binary.
        Supported values (sample value):
        <ul>
        <li><b>path (default): </b> path inlcuding the filename (/dev/mainColumnParagraphs/0/image/Alien.png)</li>
        <li><b>name </b>: name and extension (Alien.png)</li>
        <li><b>extension: </b> extension as is (Png)</li>
        <li><b>extensionLowerCase: </b> extension lower case (png)</li>
        <li><b>extensionUpperCase: </b> extension upper case (PNG)</li>
        <li><b>nameWithoutExtension: </b> (Alien)</li>
        <li><b>handle: </b> /dev/mainColumnParagraphs/0/image</li>
        <li><b>icon: </b>the default icon for the type of document</li>
        <li><b>pathWithoutName: </b> (/dev/mainColumnParagraphs/0/image.png)</li>
        <li><b>size: </b> size in bytes (2827)</li>
        <li><b>sizeString: </b> size in bytes, KB or MB - max. 3 digits before comma - with unit (2.7 KB)</li>
        <li><b>contentType: </b> (image/png)</li>
        <li><b>width: </b>image width in pixels (images only)</li>
        <li><b>height: </b>image height in pixels (images only)</li>
        </ul>
      ]]>
      </description>
    </attribute>
    <attribute>
      <name>dateLanguage</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[Set which date format shall be delivered. Does only apply for nodeDatas of type=Date. Language according to <code>java.util.Locale</code>.]]></description>
    </attribute>
    <attribute>
      <name>datePattern</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[Sets the output date format, as per java.text.SimpleDateFormat. Default is "yyyy-MM-dd". Only applies for nodeDatas of type=Date.  <ul> <li><b>G </b> Era designator Text AD <li><b>y </b> Year Year 1996; 96 <li><b>M </b> Month in year Month July; Jul; 07 <li><b>w </b> Week in year Number 27 <li><b>W </b> Week in month Number 2 <li><b>D </b> Day in year Number 189 <li><b>d </b> Day in month Number 10 <li><b>F </b> Day of week in month Number 2 <li><b>E </b> Day in week Text Tuesday; Tue <li><b>a </b> Am/pm marker Text PM <li><b>H </b> Hour in day (0-23) Number 0 <li><b>k </b> Hour in day (1-24) Number 24 <li><b>K </b> Hour in am/pm (0-11) Number 0 <li><b>h </b> Hour in am/pm (1-12) Number 12 <li><b>m </b> Minute in hour Number 30 <li><b>s </b> Second in minute Number 55 <li><b>S </b> Millisecond Number 978 <li><b>z </b> Time zone General time zone Pacific Standard Time; PST; GMT-08:00 <li><b>Z </b> Time zone RFC 822 time zone -0800 </ul>]]></description>
    </attribute>
    <attribute>
      <name>lineBreak</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[Determines how line breaks are converted. Defaults to "<br />". Set to "" to have no line break at all, or any other value to be used as the line break.]]></description>
    </attribute>
    <attribute>
      <name>contentNode</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The content object to use.
      </description>
    </attribute>
    <attribute>
      <name>uuid</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The uuid to use for finding the content.
        You must define the repository attribute if the content is not stored in the website repository.
      </description>
    </attribute>
    <attribute>
      <name>path</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The absolute path to the content.
        You must define the repository attribute if the content is not stored in the website repository.
      </description>
    </attribute>
    <attribute>
      <name>repository</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Used if the uuid or path attribute is set. Defaults to "website".
      </description>
    </attribute>
    <attribute>
      <name>uuidToLink</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[
      Transform a uuid value to a link. The following values are supported:
      <ul>
      <li>none: no uuid to link resolving. (default value)</li>
      <li>absolute: Resolve to a absolute link using the repository to uri mapping feature.</li>
      <li>handle: resolve to a absolute link but do not use the repository to uri mapping.</li>
      <li>relative: resolve to relative path. Path is relative to current page.</li>
      </ul>
      ]]>
      </description>
    </attribute>
    <attribute>
      <name>uuidToLinkRepository</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Used if the uuidToLink attribute is set. The content is found in this repository. Defaults to "website".
      </description>
    </attribute>
    <attribute>
      <name>var</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        If set, the result of the evaluation will be set to a variable named from this attribute (and in the scope
        defined using the "scope" attribute, defaulting to PAGE) instead of being written directly to the page.
      </description>
    </attribute>
    <attribute>
      <name>scope</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Scope for the attribute named from the "var" parameter. Setting this attribute doesn't have any effect if "var"
        is not set.
      </description>
    </attribute>
    <attribute>
      <name>inherit</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>Inherit the value from parent pages, if not set in the current one.</description>
    </attribute>
    <attribute>
      <name>actpage</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>If true we work on the current active page instead of any other node. @deprecated</description>
    </attribute>
    <attribute>
      <name>escapeXml</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>Determines whether output will be XML escaped.</description>
    </attribute>
    <example>
      <![CDATA[
<!-- EXAMPLE - outputting a nodes value into the page -->
<!-- output the value stored in the node namd "title" -->

<cms:out nodeDataName="title"/>

<!-- EXAMPLE - outputting a node into an EL variable -->
<!-- output the value stored in the node namd "myprop" to a variable named "check" -->
<!-- thus exposing it to EL functionality -->

<cms:out nodeDataName="myprop" var="check"/>
<c:if test="${check == 'ok'}">
  done
</if>

<!-- EXAMPLE - outputing a link from a uuid stored in a node -->
<!-- output a relative link to the page whose UUID is stored in the node named "link" to a variable "relative_link" -->

<cms:out nodeDataName="link" var="relative_link uuidToLink="relative" />
<a href="${relative_link}">go to page</a>

<!-- EXAMPLE - writing a binary file's URL out as a variable -->
<!-- this example shows how to display an image stored in the content repository using cms:out -->

<cms:ifNotEmpty nodeDataName="image">
   <cms:out nodeDataName="image" var="imageurl" />
   <img class="navIcon" src="${pageContext.request.contextPath}${imageurl}" />
</cms:ifNotEmpty>

]]>
    </example>
  </tag>
  <tag>
    <name>adminOnly</name>
    <tag-class>info.magnolia.cms.taglibs.AdminOnly</tag-class>
    <body-content>JSP</body-content>
    <description>
      Everything between adminOnly tags will only be shown on an authoring instance, not on a public instance. This
      allows you to provide functionality that is only available to page authors but not to the general public.
    </description>
    <attribute>
      <name>showInPreview</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>Also show content in preview mode. Default is false.</description>
    </attribute>
    <example>
      <![CDATA[
<cms:adminOnly>
    <cms:editBar/>
</cms:adminOnly>
]]>
    </example>
  </tag>
  <tag>
    <name>publicOnly</name>
    <tag-class>info.magnolia.cms.taglibs.PublicOnly</tag-class>
    <body-content>JSP</body-content>
    <description>Everything between publicOnly tags will only be shown on the public instance.</description>
    <attribute>
      <name>showInPreview</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>Also show content in preview mode. Default is true.</description>
    </attribute>
    <example>
      <![CDATA[
<cms:publicOnly>
    Public now!
</cms:publicOnly>
]]>
    </example>
  </tag>
  <tag>
    <name>includeTemplate</name>
    <tag-class>info.magnolia.cms.taglibs.Include</tag-class>
    <body-content>JSP</body-content>
    <description>
      Delegates to an appropriate ParagraphRenderer, or include a JSP.
      This is typically used to render a paragraph. Within contentNodeIterator, parameters are provided
      automatically by the loop.
    </description>
    <attribute>
      <name>path</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[
        @deprecated file to be included (e.g. "/templates/jsp/x.jsp").
        Just use basic jsp tags (i.e. <jsp:include/>) if you need to include a jsp in your templates.
         ]]>
      </description>
    </attribute>
    <attribute>
      <name>contentNode</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>info.magnolia.cms.core.Content</type>
    </attribute>
    <attribute>
      <name>contentNodeName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The name of the contentNode (i.e. paragraph) you wish to show.</description>
    </attribute>
    <attribute>
      <name>container</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>info.magnolia.cms.core.Content</type>
      <description>@deprecated use the contentNode attribute instead</description>
    </attribute>
  </tag>
  <tag>
    <name>set</name>
    <tag-class>info.magnolia.cms.taglibs.Set</tag-class>
    <body-content>empty</body-content>
    <description>Set contentNode in resource</description>
    <attribute>
      <name>scope</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[
        Attention this is not the jstl scope but the magnolia scope! Values are
        <ul>
        <li>local: same as paragraph</li>
        <li>paragraph: the current paragraph</li>
        <li>global: a globally use node (default value)</li>
        <li>page: same as page</li>
        <li>current: the current page</li>
        </ul>
        ]]>
      </description>
    </attribute>
    <attribute>
      <name>forBodyOnly</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        If true the node is unset after the end tag. Default is false.
      </description>
    </attribute>
    <attribute>
      <name>contentNodeName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Inside a "contentNodeIterator": if not set, the current content node is taken. If set empty (contentNodeName=""),
        the top level content is taken. If specified, the named content node is taken. Outside a "contentNodeIterator":
        if not set or empty: the top level content is taken. If specified, the named content node is taken.
      </description>
    </attribute>
    <attribute>
      <name>contentNodeCollectionName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the collection holding the content node, e.g. "mainColumnParagraphs".</description>
    </attribute>
    <attribute>
      <name>contentNode</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The content object to use.
      </description>
    </attribute>
    <attribute>
      <name>uuid</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The uuid to use for finding the content.
        You must define the repository attribute if the content is not stored in the website repository.
      </description>
    </attribute>
    <attribute>
      <name>path</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The absolute path to the content.
        You must define the repository attribute if the content is not stored in the website repository.
      </description>
    </attribute>
    <attribute>
      <name>repository</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Used if the uuid or path attribute is set. Defaults to "website".
      </description>
    </attribute>
    <attribute>
      <name>containerName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>@deprecated use the contentNodeName attribute</description>
    </attribute>
    <attribute>
      <name>container</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>info.magnolia.cms.core.Content</type>
      <description>@deprecated use the contentNode attribute</description>
    </attribute>
    <attribute>
      <name>nodeDataName</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>nodeDataName is not supported in this tag !</description>
    </attribute>
    <attribute>
      <name>inherit</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description><![CDATA[Inherit the value from parent pages, if not set in the current one.]]></description>
    </attribute>
    <attribute>
      <name>actpage</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>If true we work on the current active page instead of any other node. @deprecated</description>
    </attribute>
  </tag>
  <tag>
    <name>contentNodeIterator</name>
    <tag-class>info.magnolia.cms.taglibs.ContentNodeIterator</tag-class>
    <body-content>JSP</body-content>
    <description>Iterate over contentNode collection.
      contentNodeIterator is used whenever you want to loop over content, typically paragraphs. A parameter
      contentNodeCollectionName will contain the name of the contentNode you are looping over.
      contentNodeCollectionName is created by providing a newBar with the corresponding name. This will result in
      elements being created within that contentNode, and thus allow you to loop over these.
    </description>
    <attribute>
      <name>contentNodeCollectionName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the collection holding the content node, e.g. "mainColumnParagraphs".</description>
    </attribute>
    <attribute>
      <name>items</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.util.Collection</type>
      <description>
        if this attribute is set, the tag will iterate on the collection directly passed here instead of fetching the
        collection named by contentNodeCollectionName. This collection must contains info.magnolia.cms.core.Content
        items.
      </description>
    </attribute>
    <attribute>
      <name>contentNode</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The content object to use.
      </description>
    </attribute>
    <attribute>
      <name>uuid</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The uuid to use for finding the content.
        You must define the repository attribute if the content is not stored in the website repository.
      </description>
    </attribute>
    <attribute>
      <name>path</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The absolute path to the content.
        You must define the repository attribute if the content is not stored in the website repository.
      </description>
    </attribute>
    <attribute>
      <name>repository</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Used if the uuid or path attribute is set. Defaults to "website".
      </description>
    </attribute>
    <attribute>
      <name>begin</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>int</type>
      <description>Zero-based index of first item to process, inclusive.</description>
    </attribute>
    <attribute>
      <name>end</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>int</type>
      <description>Zero-based index of last item to process, inclusive.</description>
    </attribute>
    <attribute>
      <name>step</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>int</type>
      <description>Process every stepth element (e.g 2 = every second element).</description>
    </attribute>
    <attribute>
      <name>varStatus</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Name of variable to hold the loop status with the following properties: index: position of the current item;
        count: number of times through the loop (starting with 1); first: boolean indicator if this is the first
        iteration; last: boolean indicator if this is the last iteration.
      </description>
    </attribute>
    <attribute>
      <name>contentNodeName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Inside a "contentNodeIterator": if not set, the current content node is taken. If set empty (contentNodeName=""), the top level content is taken. If specified, the named content node is taken. Outside a "contentNodeIterator": if not set or empty: the top level content is taken. If specified, the named content node is taken.</description>
    </attribute>
    <attribute>
      <name>nodeDataName</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>nodeDataName is not supported in this tag !</description>
    </attribute>
    <attribute>
      <name>inherit</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description><![CDATA[Inherit the value from parent pages, if not set in the current one.]]></description>
    </attribute>
    <attribute>
      <name>actpage</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>If true we work on the current active page instead of any other node. @deprecated</description>
    </attribute>
    <example>
      <![CDATA[
<cms:contentNodeIterator contentNodeCollectionName="mainColumnParagraphs">
    <cms:adminOnly>
        <cms:editBar/>
    </cms:adminOnly>
    <cms:includeTemplate/>
</cms:contentNodeIterator>
]]>
    </example>
  </tag>
  <tag>
    <name>ifLastContentNode</name>
    <tag-class>info.magnolia.cms.taglibs.IfLastContentNode</tag-class>
    <body-content>JSP</body-content>
    <description>Checks if the current container is last in collection.</description>
  </tag>
  <tag>
    <name>ifFirstContentNode</name>
    <tag-class>info.magnolia.cms.taglibs.IfFirstContentNode</tag-class>
    <body-content>JSP</body-content>
    <description>Checks if the current container is first in the collection.</description>
  </tag>
  <tag>
    <name>attribute</name>
    <tag-class>info.magnolia.cms.taglibs.Attribute</tag-class>
    <body-content>empty</body-content>
    <description>Adds an attribute to the request within an includeTemplate tag.</description>
    <attribute>
      <name>name</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Object</type>
    </attribute>
  </tag>
  <tag>
    <name>ifNotEmpty</name>
    <tag-class>info.magnolia.cms.taglibs.IfNotEmpty</tag-class>
    <body-content>JSP</body-content>
    <description>Evaluates the body only if a container exitsts and / or the corresponding atom exists and is not empty.</description>
    <attribute>
      <name>inherit</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description><![CDATA[Inherit the value from parent pages, if not set in the current one.]]></description>
    </attribute>
    <attribute>
      <name>repository</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[Used if the uuid or path attribute is set. Defaults to "website".]]></description>
    </attribute>
    <attribute>
      <name>uuid</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The uuid to use for finding the content. You must define the repository attribute if the content is not stored in the website repository.]]></description>
    </attribute>
    <attribute>
      <name>path</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The absolute path to the content. You must define the repository attribute if the content is not stored in the website repository.]]></description>
    </attribute>
    <attribute>
      <name>contentNode</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The content object to use.]]></description>
    </attribute>
    <attribute>
      <name>nodeDataName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>atomName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>@deprecated</description>
    </attribute>
    <attribute>
      <name>contentNodeName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[Inside a "contentNodeIterator": if not set, the current content node is taken. If set empty (contentNodeName=""), the top level content is taken. If specified, the named content node is taken. Outside a "contentNodeIterator": if not set or empty: the top level content is taken. If specified, the named content node is taken.]]></description>
    </attribute>
    <attribute>
      <name>containerName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>@deprecated use the contentNodeName attribute instead.</description>
    </attribute>
    <attribute>
      <name>contentNodeCollectionName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the collection holding the content node, e.g. "mainColumnParagraphs".</description>
    </attribute>
    <attribute>
      <name>containerListName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>@deprecated use the contentNodeCollectionName attribute instead.</description>
    </attribute>
    <attribute>
      <name>actpage</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>If true we work on the current active page instead of any other node. @deprecated</description>
    </attribute>
  </tag>
  <tag>
    <name>ifEmpty</name>
    <tag-class>info.magnolia.cms.taglibs.IfEmpty</tag-class>
    <body-content>JSP</body-content>
    <description>This is exactly the opposite of the ifNotEmpty tag.</description>
    <attribute>
      <name>inherit</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description><![CDATA[Inherit the value from parent pages, if not set in the current one.]]></description>
    </attribute>
    <attribute>
      <name>repository</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[Used if the uuid or path attribute is set. Defaults to "website".]]></description>
    </attribute>
    <attribute>
      <name>uuid</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The uuid to use for finding the content. You must define the repository attribute if the content is not stored in the website repository.]]></description>
    </attribute>
    <attribute>
      <name>path</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The absolute path to the content. You must define the repository attribute if the content is not stored in the website repository.]]></description>
    </attribute>
    <attribute>
      <name>contentNode</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The content object to use.]]></description>
    </attribute>
    <attribute>
      <name>nodeDataName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>atomName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>@deprecated</description>
    </attribute>
    <attribute>
      <name>contentNodeName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[Inside a "contentNodeIterator": if not set, the current content node is taken. If set empty (contentNodeName=""), the top level content is taken. If specified, the named content node is taken. Outside a "contentNodeIterator": if not set or empty: the top level content is taken. If specified, the named content node is taken.]]></description>
    </attribute>
    <attribute>
      <name>containerName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>@deprecated use the contentNodeName attribute instead.</description>
    </attribute>
    <attribute>
      <name>contentNodeCollectionName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the collection holding the content node, e.g. "mainColumnParagraphs".</description>
    </attribute>
    <attribute>
      <name>containerListName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>@deprecated use the contentNodeCollectionName attribute instead.</description>
    </attribute>
    <attribute>
      <name>actpage</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>If true we work on the current active page instead of any other node. @deprecated</description>
    </attribute>
  </tag>
  <tag>
    <name>ifNotExisting</name>
    <tag-class>info.magnolia.cms.taglibs.IfNotExisting</tag-class>
    <body-content>JSP</body-content>
    <description>Evaluates the body only if a container and / or the corresponding atom does not exist.</description>
    <attribute>
      <name>inherit</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description><![CDATA[Inherit the value from parent pages, if not set in the current one.]]></description>
    </attribute>
    <attribute>
      <name>repository</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[Used if the uuid or path attribute is set. Defaults to "website".]]></description>
    </attribute>
    <attribute>
      <name>uuid</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The uuid to use for finding the content. You must define the repository attribute if the content is not stored in the website repository.]]></description>
    </attribute>
    <attribute>
      <name>path</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The absolute path to the content. You must define the repository attribute if the content is not stored in the website repository.]]></description>
    </attribute>
    <attribute>
      <name>contentNode</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The content object to use.]]></description>
    </attribute>
    <attribute>
      <name>nodeDataName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>contentNodeName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Inside a "contentNodeIterator": if not set, the current content node is taken. If set empty (contentNodeName=""), the top level content is taken. If specified, the named content node is taken. Outside a "contentNodeIterator": if not set or empty: the top level content is taken. If specified, the named content node is taken.</description>
    </attribute>
    <attribute>
      <name>contentNodeCollectionName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the collection holding the content node, e.g. "mainColumnParagraphs".</description>
    </attribute>
    <attribute>
      <name>actpage</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>If true we work on the current active page instead of any other node. @deprecated</description>
    </attribute>
  </tag>
  <tag>
    <name>ifExisting</name>
    <tag-class>info.magnolia.cms.taglibs.IfExisting</tag-class>
    <body-content>JSP</body-content>
    <description>This is exactly the opposite of the ifNotExisting Tag.</description>
    <attribute>
      <name>inherit</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description><![CDATA[Inherit the value from parent pages, if not set in the current one.]]></description>
    </attribute>
    <attribute>
      <name>repository</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[Used if the uuid or path attribute is set. Defaults to "website".]]></description>
    </attribute>
    <attribute>
      <name>uuid</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The uuid to use for finding the content. You must define the repository attribute if the content is not stored in the website repository.]]></description>
    </attribute>
    <attribute>
      <name>path</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The absolute path to the content. You must define the repository attribute if the content is not stored in the website repository.]]></description>
    </attribute>
    <attribute>
      <name>contentNode</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description><![CDATA[The content object to use.]]></description>
    </attribute>
    <attribute>
      <name>nodeDataName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>contentNodeName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Inside a "contentNodeIterator": if not set, the current content node is taken. If set empty (contentNodeName=""), the top level content is taken. If specified, the named content node is taken. Outside a "contentNodeIterator": if not set or empty: the top level content is taken. If specified, the named content node is taken.</description>
    </attribute>
    <attribute>
      <name>contentNodeCollectionName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the collection holding the content node, e.g. "mainColumnParagraphs".</description>
    </attribute>
    <attribute>
      <name>actpage</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>If true we work on the current active page instead of any other node. @deprecated</description>
    </attribute>
  </tag>
  <tag>
    <name>loadPage</name>
    <tag-class>info.magnolia.cms.taglibs.LoadPage</tag-class>
    <body-content>JSP</body-content>
    <description>
      Loads another page into actpage. One usage would be within a site-menu structure. loadPage does not nest pages, so
      the corresponding unloadPage tag will not revert to the previously loaded page, but restore actpage to the
      currently displayed page, i.e. the value it held before loadPage was called for the first time.
    </description>
    <attribute>
      <name>path</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Path of the page to be loaded.</description>
    </attribute>
    <attribute>
      <name>templateName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>level</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>int</type>
    </attribute>
  </tag>
  <tag>
    <name>loadPagePath</name>
    <tag-class>info.magnolia.cms.taglibs.LoadPagePath</tag-class>
    <body-content>JSP</body-content>
    <description>Sub tag of loadPage, its body contains the path of the page to load.</description>
  </tag>
  <tag>
    <name>unloadPage</name>
    <tag-class>info.magnolia.cms.taglibs.UnloadPage</tag-class>
    <body-content>empty</body-content>
    <description>
      The unloadPage tag will restore actpage to the currently displayed page. This can be necessary after you have used
      loadPage to temporarily have access to a different page, e.g. for building a menu.
    </description>
  </tag>
  <tag>
    <name>setNode</name>
    <tag-class>info.magnolia.cms.taglibs.SetNode</tag-class>
    <body-content>empty</body-content>
    <description>
      <![CDATA[
      Exposes a content node to the pagecontext as a Map of nodeData, in order to access the exposed object using JSTL.
      Since JSTL doesn't allow calling a method like <code>Content.getNodeData(String)</code> the <code>Content</code> is wrapped into a <code>NodeMapWrapper</code> which exposes NodeData using a map interface. This tag can be useful in similar situations: (see @jsp.tag-example)
      ]]>
    </description>
    <attribute>
      <name>contentNodeName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Inside a "contentNodeIterator": if not set, the current content node is taken. If set empty (contentNodeName=""),
        the top level content is taken. If specified, the named content node is taken. Outside a "contentNodeIterator":
        if not set or empty: the top level content is taken. If specified, the named content node is taken.
      </description>
    </attribute>
    <attribute>
      <name>contentNodeCollectionName</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the collection holding the content node, e.g. "mainColumnParagraphs".</description>
    </attribute>
    <attribute>
      <name>content</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>@deprecated use the contentNode attribute</description>
    </attribute>
    <attribute>
      <name>contentNode</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The content object to use.
      </description>
    </attribute>
    <attribute>
      <name>uuid</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The uuid to use for finding the content.
        You must define the repository attribute if the content is not stored in the website repository.
      </description>
    </attribute>
    <attribute>
      <name>path</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The absolute path to the content.
        You must define the repository attribute if the content is not stored in the website repository.
      </description>
    </attribute>
    <attribute>
      <name>repository</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Used if the uuid or path attribute is set. Defaults to "website".
      </description>
    </attribute>
    <attribute>
      <name>var</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The content node will be added to the pagecontext with this name.</description>
    </attribute>
    <attribute>
      <name>scope</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Scope for the declared variable. Can be "page" (default), "request", "session" or "application".</description>
    </attribute>
    <attribute>
      <name>nodeDataName</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>nodeDataName is not supported in this tag !</description>
    </attribute>
    <attribute>
      <name>inherit</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description><![CDATA[Inherit the value from parent pages, if not set in the current one.]]></description>
    </attribute>
    <attribute>
      <name>actpage</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>If true we work on the current active page instead of any other node. @deprecated</description>
    </attribute>
    <example>
      <![CDATA[
<cms:setNode var="currentNode"/>
<c:if test="${!empty currentNode.title}">
  <c:out value="${currentNode.title}"/>
</c:if>
]]>
    </example>
  </tag>
  <tag>
    <name>pageIterator</name>
    <tag-class>info.magnolia.cms.taglibs.PageIterator</tag-class>
    <body-content>JSP</body-content>
    <description>Iterate over a Content (page) collection.</description>
    <attribute>
      <name>hiddenAttribute</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        If a page contains a boolean property with this name and it is set to true, the page is skipped by the iterator.
        Defaults to "hidden".
      </description>
    </attribute>
  </tag>
  <tag>
    <name>button</name>
    <tag-class>info.magnolia.cms.taglibs.ButtonTag</tag-class>
    <body-content>empty</body-content>
    <description>Adds a button to a parent bar. Must be nested into a mainBar or newBar to work.</description>
    <attribute>
      <name>label</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Label for this button.</description>
    </attribute>
    <attribute>
      <name>dialogName</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the dialog to open.</description>
    </attribute>
    <attribute>
      <name>position</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Where to add this button. Can be "left" or "right". Default is "left".</description>
    </attribute>
  </tag>
  <tag>
    <name>query</name>
    <tag-class>info.magnolia.cms.taglibs.QueryTag</tag-class>
    <body-content>empty</body-content>
    <description>Executes a query on a magnolia repository.</description>
    <attribute>
      <name>var</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        The result for this query (Collection of content objects) will be added to the pageContext with this name.
      </description>
    </attribute>
    <attribute>
      <name>query</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The query.</description>
    </attribute>
    <attribute>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Query type: "sql" or "xpath". Defaults to xpath.</description>
    </attribute>
    <attribute>
      <name>repository</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The repository to execute this query on. Defaults to "website".</description>
    </attribute>
    <attribute>
      <name>nodeType</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Nodetype for nodes to return. Defaults to "mgnl:content".</description>
    </attribute>
  </tag>
  <tag>
    <name>user</name>
    <tag-class>info.magnolia.cms.taglibs.UserTag</tag-class>
    <body-content>empty</body-content>
    <description>Set the current user (info.magnolia.cms.security.User) into a pageContext variable.</description>
    <attribute>
      <name>var</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>The current user will be set to the pageContext variable with this name.</description>
    </attribute>
    <attribute>
      <name>anonymous</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
      <description>
        Display anonymous users as "anonymous". Default to false (variable will not be set for anonymous users)
      </description>
    </attribute>
  </tag>
</taglib>
